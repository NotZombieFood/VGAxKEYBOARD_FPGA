module rom_1(
	input clk,
	input rst,
	input [9:0] address,
	output [511:0] data
);
logic [511:0] rf [26:0];

always_ff @ (posedge clk) begin
	if (rst) begin
		rf [0] <= 512'b
		rf [1] <=
		rf [2] <=
		rf [3] <=
		rf [4] <=
		rf [5] <=
		rf [6] <=
		rf [7] <=
		rf [8] <=
		rf [9] <=
		rf [10] <=
		rf [11] <=
		rf [12] <=
		rf [13] <=
		rf [14] <=
		rf [15] <=
		rf [16] <=
		rf [17] <=
		rf [18] <=
		rf [19] <=
		rf [20] <=
		rf [21] <=
		rf [22] <=
		rf [23] <=
		rf [24] <=
		rf [25] <=
		rf [26] <=
	end
end

assign data <= rf[address];

endmodule 